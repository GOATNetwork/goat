// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package relayerv1

import (
	_ "cosmossdk.io/api/amino"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	reflect "reflect"
	sync "sync"
)

var _ protoreflect.List = (*_Relayer_3_list)(nil)

type _Relayer_3_list struct {
	list *[]string
}

func (x *_Relayer_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_Relayer_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_Relayer_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_Relayer_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_Relayer_3_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message Relayer at list field Voters as it is not of Message kind"))
}

func (x *_Relayer_3_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_Relayer_3_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_Relayer_3_list) IsValid() bool {
	return x.list != nil
}

var (
	md_Relayer                   protoreflect.MessageDescriptor
	fd_Relayer_epoch             protoreflect.FieldDescriptor
	fd_Relayer_proposer          protoreflect.FieldDescriptor
	fd_Relayer_voters            protoreflect.FieldDescriptor
	fd_Relayer_last_elected      protoreflect.FieldDescriptor
	fd_Relayer_proposer_accepted protoreflect.FieldDescriptor
)

func init() {
	file_goat_relayer_v1_relayer_proto_init()
	md_Relayer = File_goat_relayer_v1_relayer_proto.Messages().ByName("Relayer")
	fd_Relayer_epoch = md_Relayer.Fields().ByName("epoch")
	fd_Relayer_proposer = md_Relayer.Fields().ByName("proposer")
	fd_Relayer_voters = md_Relayer.Fields().ByName("voters")
	fd_Relayer_last_elected = md_Relayer.Fields().ByName("last_elected")
	fd_Relayer_proposer_accepted = md_Relayer.Fields().ByName("proposer_accepted")
}

var _ protoreflect.Message = (*fastReflection_Relayer)(nil)

type fastReflection_Relayer Relayer

func (x *Relayer) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Relayer)(x)
}

func (x *Relayer) slowProtoReflect() protoreflect.Message {
	mi := &file_goat_relayer_v1_relayer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Relayer_messageType fastReflection_Relayer_messageType
var _ protoreflect.MessageType = fastReflection_Relayer_messageType{}

type fastReflection_Relayer_messageType struct{}

func (x fastReflection_Relayer_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Relayer)(nil)
}
func (x fastReflection_Relayer_messageType) New() protoreflect.Message {
	return new(fastReflection_Relayer)
}
func (x fastReflection_Relayer_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Relayer
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Relayer) Descriptor() protoreflect.MessageDescriptor {
	return md_Relayer
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Relayer) Type() protoreflect.MessageType {
	return _fastReflection_Relayer_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Relayer) New() protoreflect.Message {
	return new(fastReflection_Relayer)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Relayer) Interface() protoreflect.ProtoMessage {
	return (*Relayer)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Relayer) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Epoch != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Epoch)
		if !f(fd_Relayer_epoch, value) {
			return
		}
	}
	if x.Proposer != "" {
		value := protoreflect.ValueOfString(x.Proposer)
		if !f(fd_Relayer_proposer, value) {
			return
		}
	}
	if len(x.Voters) != 0 {
		value := protoreflect.ValueOfList(&_Relayer_3_list{list: &x.Voters})
		if !f(fd_Relayer_voters, value) {
			return
		}
	}
	if x.LastElected != nil {
		value := protoreflect.ValueOfMessage(x.LastElected.ProtoReflect())
		if !f(fd_Relayer_last_elected, value) {
			return
		}
	}
	if x.ProposerAccepted != false {
		value := protoreflect.ValueOfBool(x.ProposerAccepted)
		if !f(fd_Relayer_proposer_accepted, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Relayer) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "goat.relayer.v1.Relayer.epoch":
		return x.Epoch != uint64(0)
	case "goat.relayer.v1.Relayer.proposer":
		return x.Proposer != ""
	case "goat.relayer.v1.Relayer.voters":
		return len(x.Voters) != 0
	case "goat.relayer.v1.Relayer.last_elected":
		return x.LastElected != nil
	case "goat.relayer.v1.Relayer.proposer_accepted":
		return x.ProposerAccepted != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.relayer.v1.Relayer"))
		}
		panic(fmt.Errorf("message goat.relayer.v1.Relayer does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Relayer) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "goat.relayer.v1.Relayer.epoch":
		x.Epoch = uint64(0)
	case "goat.relayer.v1.Relayer.proposer":
		x.Proposer = ""
	case "goat.relayer.v1.Relayer.voters":
		x.Voters = nil
	case "goat.relayer.v1.Relayer.last_elected":
		x.LastElected = nil
	case "goat.relayer.v1.Relayer.proposer_accepted":
		x.ProposerAccepted = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.relayer.v1.Relayer"))
		}
		panic(fmt.Errorf("message goat.relayer.v1.Relayer does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Relayer) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "goat.relayer.v1.Relayer.epoch":
		value := x.Epoch
		return protoreflect.ValueOfUint64(value)
	case "goat.relayer.v1.Relayer.proposer":
		value := x.Proposer
		return protoreflect.ValueOfString(value)
	case "goat.relayer.v1.Relayer.voters":
		if len(x.Voters) == 0 {
			return protoreflect.ValueOfList(&_Relayer_3_list{})
		}
		listValue := &_Relayer_3_list{list: &x.Voters}
		return protoreflect.ValueOfList(listValue)
	case "goat.relayer.v1.Relayer.last_elected":
		value := x.LastElected
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "goat.relayer.v1.Relayer.proposer_accepted":
		value := x.ProposerAccepted
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.relayer.v1.Relayer"))
		}
		panic(fmt.Errorf("message goat.relayer.v1.Relayer does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Relayer) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "goat.relayer.v1.Relayer.epoch":
		x.Epoch = value.Uint()
	case "goat.relayer.v1.Relayer.proposer":
		x.Proposer = value.Interface().(string)
	case "goat.relayer.v1.Relayer.voters":
		lv := value.List()
		clv := lv.(*_Relayer_3_list)
		x.Voters = *clv.list
	case "goat.relayer.v1.Relayer.last_elected":
		x.LastElected = value.Message().Interface().(*timestamppb.Timestamp)
	case "goat.relayer.v1.Relayer.proposer_accepted":
		x.ProposerAccepted = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.relayer.v1.Relayer"))
		}
		panic(fmt.Errorf("message goat.relayer.v1.Relayer does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Relayer) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goat.relayer.v1.Relayer.voters":
		if x.Voters == nil {
			x.Voters = []string{}
		}
		value := &_Relayer_3_list{list: &x.Voters}
		return protoreflect.ValueOfList(value)
	case "goat.relayer.v1.Relayer.last_elected":
		if x.LastElected == nil {
			x.LastElected = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.LastElected.ProtoReflect())
	case "goat.relayer.v1.Relayer.epoch":
		panic(fmt.Errorf("field epoch of message goat.relayer.v1.Relayer is not mutable"))
	case "goat.relayer.v1.Relayer.proposer":
		panic(fmt.Errorf("field proposer of message goat.relayer.v1.Relayer is not mutable"))
	case "goat.relayer.v1.Relayer.proposer_accepted":
		panic(fmt.Errorf("field proposer_accepted of message goat.relayer.v1.Relayer is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.relayer.v1.Relayer"))
		}
		panic(fmt.Errorf("message goat.relayer.v1.Relayer does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Relayer) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goat.relayer.v1.Relayer.epoch":
		return protoreflect.ValueOfUint64(uint64(0))
	case "goat.relayer.v1.Relayer.proposer":
		return protoreflect.ValueOfString("")
	case "goat.relayer.v1.Relayer.voters":
		list := []string{}
		return protoreflect.ValueOfList(&_Relayer_3_list{list: &list})
	case "goat.relayer.v1.Relayer.last_elected":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "goat.relayer.v1.Relayer.proposer_accepted":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.relayer.v1.Relayer"))
		}
		panic(fmt.Errorf("message goat.relayer.v1.Relayer does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Relayer) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in goat.relayer.v1.Relayer", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Relayer) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Relayer) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Relayer) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Relayer) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Relayer)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Epoch != 0 {
			n += 1 + runtime.Sov(uint64(x.Epoch))
		}
		l = len(x.Proposer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Voters) > 0 {
			for _, s := range x.Voters {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.LastElected != nil {
			l = options.Size(x.LastElected)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ProposerAccepted {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Relayer)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.ProposerAccepted {
			i--
			if x.ProposerAccepted {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x28
		}
		if x.LastElected != nil {
			encoded, err := options.Marshal(x.LastElected)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Voters) > 0 {
			for iNdEx := len(x.Voters) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Voters[iNdEx])
				copy(dAtA[i:], x.Voters[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Voters[iNdEx])))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.Proposer) > 0 {
			i -= len(x.Proposer)
			copy(dAtA[i:], x.Proposer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Proposer)))
			i--
			dAtA[i] = 0x12
		}
		if x.Epoch != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Epoch))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Relayer)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Relayer: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Relayer: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Epoch", wireType)
				}
				x.Epoch = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Epoch |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Proposer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Proposer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Voters", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Voters = append(x.Voters, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LastElected", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.LastElected == nil {
					x.LastElected = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.LastElected); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProposerAccepted", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.ProposerAccepted = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_Voter          protoreflect.MessageDescriptor
	fd_Voter_address  protoreflect.FieldDescriptor
	fd_Voter_vote_key protoreflect.FieldDescriptor
	fd_Voter_status   protoreflect.FieldDescriptor
	fd_Voter_height   protoreflect.FieldDescriptor
)

func init() {
	file_goat_relayer_v1_relayer_proto_init()
	md_Voter = File_goat_relayer_v1_relayer_proto.Messages().ByName("Voter")
	fd_Voter_address = md_Voter.Fields().ByName("address")
	fd_Voter_vote_key = md_Voter.Fields().ByName("vote_key")
	fd_Voter_status = md_Voter.Fields().ByName("status")
	fd_Voter_height = md_Voter.Fields().ByName("height")
}

var _ protoreflect.Message = (*fastReflection_Voter)(nil)

type fastReflection_Voter Voter

func (x *Voter) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Voter)(x)
}

func (x *Voter) slowProtoReflect() protoreflect.Message {
	mi := &file_goat_relayer_v1_relayer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Voter_messageType fastReflection_Voter_messageType
var _ protoreflect.MessageType = fastReflection_Voter_messageType{}

type fastReflection_Voter_messageType struct{}

func (x fastReflection_Voter_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Voter)(nil)
}
func (x fastReflection_Voter_messageType) New() protoreflect.Message {
	return new(fastReflection_Voter)
}
func (x fastReflection_Voter_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Voter
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Voter) Descriptor() protoreflect.MessageDescriptor {
	return md_Voter
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Voter) Type() protoreflect.MessageType {
	return _fastReflection_Voter_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Voter) New() protoreflect.Message {
	return new(fastReflection_Voter)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Voter) Interface() protoreflect.ProtoMessage {
	return (*Voter)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Voter) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Address) != 0 {
		value := protoreflect.ValueOfBytes(x.Address)
		if !f(fd_Voter_address, value) {
			return
		}
	}
	if len(x.VoteKey) != 0 {
		value := protoreflect.ValueOfBytes(x.VoteKey)
		if !f(fd_Voter_vote_key, value) {
			return
		}
	}
	if x.Status != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Status))
		if !f(fd_Voter_status, value) {
			return
		}
	}
	if x.Height != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Height)
		if !f(fd_Voter_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Voter) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "goat.relayer.v1.Voter.address":
		return len(x.Address) != 0
	case "goat.relayer.v1.Voter.vote_key":
		return len(x.VoteKey) != 0
	case "goat.relayer.v1.Voter.status":
		return x.Status != 0
	case "goat.relayer.v1.Voter.height":
		return x.Height != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.relayer.v1.Voter"))
		}
		panic(fmt.Errorf("message goat.relayer.v1.Voter does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Voter) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "goat.relayer.v1.Voter.address":
		x.Address = nil
	case "goat.relayer.v1.Voter.vote_key":
		x.VoteKey = nil
	case "goat.relayer.v1.Voter.status":
		x.Status = 0
	case "goat.relayer.v1.Voter.height":
		x.Height = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.relayer.v1.Voter"))
		}
		panic(fmt.Errorf("message goat.relayer.v1.Voter does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Voter) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "goat.relayer.v1.Voter.address":
		value := x.Address
		return protoreflect.ValueOfBytes(value)
	case "goat.relayer.v1.Voter.vote_key":
		value := x.VoteKey
		return protoreflect.ValueOfBytes(value)
	case "goat.relayer.v1.Voter.status":
		value := x.Status
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "goat.relayer.v1.Voter.height":
		value := x.Height
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.relayer.v1.Voter"))
		}
		panic(fmt.Errorf("message goat.relayer.v1.Voter does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Voter) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "goat.relayer.v1.Voter.address":
		x.Address = value.Bytes()
	case "goat.relayer.v1.Voter.vote_key":
		x.VoteKey = value.Bytes()
	case "goat.relayer.v1.Voter.status":
		x.Status = (VoterStatus)(value.Enum())
	case "goat.relayer.v1.Voter.height":
		x.Height = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.relayer.v1.Voter"))
		}
		panic(fmt.Errorf("message goat.relayer.v1.Voter does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Voter) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goat.relayer.v1.Voter.address":
		panic(fmt.Errorf("field address of message goat.relayer.v1.Voter is not mutable"))
	case "goat.relayer.v1.Voter.vote_key":
		panic(fmt.Errorf("field vote_key of message goat.relayer.v1.Voter is not mutable"))
	case "goat.relayer.v1.Voter.status":
		panic(fmt.Errorf("field status of message goat.relayer.v1.Voter is not mutable"))
	case "goat.relayer.v1.Voter.height":
		panic(fmt.Errorf("field height of message goat.relayer.v1.Voter is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.relayer.v1.Voter"))
		}
		panic(fmt.Errorf("message goat.relayer.v1.Voter does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Voter) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goat.relayer.v1.Voter.address":
		return protoreflect.ValueOfBytes(nil)
	case "goat.relayer.v1.Voter.vote_key":
		return protoreflect.ValueOfBytes(nil)
	case "goat.relayer.v1.Voter.status":
		return protoreflect.ValueOfEnum(0)
	case "goat.relayer.v1.Voter.height":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.relayer.v1.Voter"))
		}
		panic(fmt.Errorf("message goat.relayer.v1.Voter does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Voter) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in goat.relayer.v1.Voter", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Voter) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Voter) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Voter) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Voter) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Voter)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Address)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.VoteKey)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Status != 0 {
			n += 1 + runtime.Sov(uint64(x.Status))
		}
		if x.Height != 0 {
			n += 1 + runtime.Sov(uint64(x.Height))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Voter)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Height != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Height))
			i--
			dAtA[i] = 0x20
		}
		if x.Status != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Status))
			i--
			dAtA[i] = 0x18
		}
		if len(x.VoteKey) > 0 {
			i -= len(x.VoteKey)
			copy(dAtA[i:], x.VoteKey)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.VoteKey)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Address) > 0 {
			i -= len(x.Address)
			copy(dAtA[i:], x.Address)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Address)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Voter)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Voter: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Voter: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Address = append(x.Address[:0], dAtA[iNdEx:postIndex]...)
				if x.Address == nil {
					x.Address = []byte{}
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VoteKey", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.VoteKey = append(x.VoteKey[:0], dAtA[iNdEx:postIndex]...)
				if x.VoteKey == nil {
					x.VoteKey = []byte{}
				}
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				x.Status = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Status |= VoterStatus(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
				}
				x.Height = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Height |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_PublicKey           protoreflect.MessageDescriptor
	fd_PublicKey_secp256k1 protoreflect.FieldDescriptor
	fd_PublicKey_schnorr   protoreflect.FieldDescriptor
)

func init() {
	file_goat_relayer_v1_relayer_proto_init()
	md_PublicKey = File_goat_relayer_v1_relayer_proto.Messages().ByName("PublicKey")
	fd_PublicKey_secp256k1 = md_PublicKey.Fields().ByName("secp256k1")
	fd_PublicKey_schnorr = md_PublicKey.Fields().ByName("schnorr")
}

var _ protoreflect.Message = (*fastReflection_PublicKey)(nil)

type fastReflection_PublicKey PublicKey

func (x *PublicKey) ProtoReflect() protoreflect.Message {
	return (*fastReflection_PublicKey)(x)
}

func (x *PublicKey) slowProtoReflect() protoreflect.Message {
	mi := &file_goat_relayer_v1_relayer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_PublicKey_messageType fastReflection_PublicKey_messageType
var _ protoreflect.MessageType = fastReflection_PublicKey_messageType{}

type fastReflection_PublicKey_messageType struct{}

func (x fastReflection_PublicKey_messageType) Zero() protoreflect.Message {
	return (*fastReflection_PublicKey)(nil)
}
func (x fastReflection_PublicKey_messageType) New() protoreflect.Message {
	return new(fastReflection_PublicKey)
}
func (x fastReflection_PublicKey_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_PublicKey
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_PublicKey) Descriptor() protoreflect.MessageDescriptor {
	return md_PublicKey
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_PublicKey) Type() protoreflect.MessageType {
	return _fastReflection_PublicKey_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_PublicKey) New() protoreflect.Message {
	return new(fastReflection_PublicKey)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_PublicKey) Interface() protoreflect.ProtoMessage {
	return (*PublicKey)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_PublicKey) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Key != nil {
		switch o := x.Key.(type) {
		case *PublicKey_Secp256K1:
			v := o.Secp256K1
			value := protoreflect.ValueOfBytes(v)
			if !f(fd_PublicKey_secp256k1, value) {
				return
			}
		case *PublicKey_Schnorr:
			v := o.Schnorr
			value := protoreflect.ValueOfBytes(v)
			if !f(fd_PublicKey_schnorr, value) {
				return
			}
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_PublicKey) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "goat.relayer.v1.PublicKey.secp256k1":
		if x.Key == nil {
			return false
		} else if _, ok := x.Key.(*PublicKey_Secp256K1); ok {
			return true
		} else {
			return false
		}
	case "goat.relayer.v1.PublicKey.schnorr":
		if x.Key == nil {
			return false
		} else if _, ok := x.Key.(*PublicKey_Schnorr); ok {
			return true
		} else {
			return false
		}
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.relayer.v1.PublicKey"))
		}
		panic(fmt.Errorf("message goat.relayer.v1.PublicKey does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_PublicKey) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "goat.relayer.v1.PublicKey.secp256k1":
		x.Key = nil
	case "goat.relayer.v1.PublicKey.schnorr":
		x.Key = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.relayer.v1.PublicKey"))
		}
		panic(fmt.Errorf("message goat.relayer.v1.PublicKey does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_PublicKey) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "goat.relayer.v1.PublicKey.secp256k1":
		if x.Key == nil {
			return protoreflect.ValueOfBytes(nil)
		} else if v, ok := x.Key.(*PublicKey_Secp256K1); ok {
			return protoreflect.ValueOfBytes(v.Secp256K1)
		} else {
			return protoreflect.ValueOfBytes(nil)
		}
	case "goat.relayer.v1.PublicKey.schnorr":
		if x.Key == nil {
			return protoreflect.ValueOfBytes(nil)
		} else if v, ok := x.Key.(*PublicKey_Schnorr); ok {
			return protoreflect.ValueOfBytes(v.Schnorr)
		} else {
			return protoreflect.ValueOfBytes(nil)
		}
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.relayer.v1.PublicKey"))
		}
		panic(fmt.Errorf("message goat.relayer.v1.PublicKey does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_PublicKey) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "goat.relayer.v1.PublicKey.secp256k1":
		cv := value.Bytes()
		x.Key = &PublicKey_Secp256K1{Secp256K1: cv}
	case "goat.relayer.v1.PublicKey.schnorr":
		cv := value.Bytes()
		x.Key = &PublicKey_Schnorr{Schnorr: cv}
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.relayer.v1.PublicKey"))
		}
		panic(fmt.Errorf("message goat.relayer.v1.PublicKey does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_PublicKey) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goat.relayer.v1.PublicKey.secp256k1":
		panic(fmt.Errorf("field secp256k1 of message goat.relayer.v1.PublicKey is not mutable"))
	case "goat.relayer.v1.PublicKey.schnorr":
		panic(fmt.Errorf("field schnorr of message goat.relayer.v1.PublicKey is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.relayer.v1.PublicKey"))
		}
		panic(fmt.Errorf("message goat.relayer.v1.PublicKey does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_PublicKey) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goat.relayer.v1.PublicKey.secp256k1":
		return protoreflect.ValueOfBytes(nil)
	case "goat.relayer.v1.PublicKey.schnorr":
		return protoreflect.ValueOfBytes(nil)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.relayer.v1.PublicKey"))
		}
		panic(fmt.Errorf("message goat.relayer.v1.PublicKey does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_PublicKey) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	case "goat.relayer.v1.PublicKey.key":
		if x.Key == nil {
			return nil
		}
		switch x.Key.(type) {
		case *PublicKey_Secp256K1:
			return x.Descriptor().Fields().ByName("secp256k1")
		case *PublicKey_Schnorr:
			return x.Descriptor().Fields().ByName("schnorr")
		}
	default:
		panic(fmt.Errorf("%s is not a oneof field in goat.relayer.v1.PublicKey", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_PublicKey) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_PublicKey) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_PublicKey) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_PublicKey) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*PublicKey)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		switch x := x.Key.(type) {
		case *PublicKey_Secp256K1:
			if x == nil {
				break
			}
			l = len(x.Secp256K1)
			n += 1 + l + runtime.Sov(uint64(l))
		case *PublicKey_Schnorr:
			if x == nil {
				break
			}
			l = len(x.Schnorr)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*PublicKey)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		switch x := x.Key.(type) {
		case *PublicKey_Secp256K1:
			i -= len(x.Secp256K1)
			copy(dAtA[i:], x.Secp256K1)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Secp256K1)))
			i--
			dAtA[i] = 0xa
		case *PublicKey_Schnorr:
			i -= len(x.Schnorr)
			copy(dAtA[i:], x.Schnorr)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Schnorr)))
			i--
			dAtA[i] = 0x12
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*PublicKey)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: PublicKey: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: PublicKey: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Secp256K1", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v := make([]byte, postIndex-iNdEx)
				copy(v, dAtA[iNdEx:postIndex])
				x.Key = &PublicKey_Secp256K1{v}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Schnorr", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v := make([]byte, postIndex-iNdEx)
				copy(v, dAtA[iNdEx:postIndex])
				x.Key = &PublicKey_Schnorr{v}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_Votes           protoreflect.MessageDescriptor
	fd_Votes_sequence  protoreflect.FieldDescriptor
	fd_Votes_epoch     protoreflect.FieldDescriptor
	fd_Votes_voters    protoreflect.FieldDescriptor
	fd_Votes_signature protoreflect.FieldDescriptor
)

func init() {
	file_goat_relayer_v1_relayer_proto_init()
	md_Votes = File_goat_relayer_v1_relayer_proto.Messages().ByName("Votes")
	fd_Votes_sequence = md_Votes.Fields().ByName("sequence")
	fd_Votes_epoch = md_Votes.Fields().ByName("epoch")
	fd_Votes_voters = md_Votes.Fields().ByName("voters")
	fd_Votes_signature = md_Votes.Fields().ByName("signature")
}

var _ protoreflect.Message = (*fastReflection_Votes)(nil)

type fastReflection_Votes Votes

func (x *Votes) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Votes)(x)
}

func (x *Votes) slowProtoReflect() protoreflect.Message {
	mi := &file_goat_relayer_v1_relayer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Votes_messageType fastReflection_Votes_messageType
var _ protoreflect.MessageType = fastReflection_Votes_messageType{}

type fastReflection_Votes_messageType struct{}

func (x fastReflection_Votes_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Votes)(nil)
}
func (x fastReflection_Votes_messageType) New() protoreflect.Message {
	return new(fastReflection_Votes)
}
func (x fastReflection_Votes_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Votes
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Votes) Descriptor() protoreflect.MessageDescriptor {
	return md_Votes
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Votes) Type() protoreflect.MessageType {
	return _fastReflection_Votes_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Votes) New() protoreflect.Message {
	return new(fastReflection_Votes)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Votes) Interface() protoreflect.ProtoMessage {
	return (*Votes)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Votes) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Sequence != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Sequence)
		if !f(fd_Votes_sequence, value) {
			return
		}
	}
	if x.Epoch != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Epoch)
		if !f(fd_Votes_epoch, value) {
			return
		}
	}
	if len(x.Voters) != 0 {
		value := protoreflect.ValueOfBytes(x.Voters)
		if !f(fd_Votes_voters, value) {
			return
		}
	}
	if len(x.Signature) != 0 {
		value := protoreflect.ValueOfBytes(x.Signature)
		if !f(fd_Votes_signature, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Votes) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "goat.relayer.v1.Votes.sequence":
		return x.Sequence != uint64(0)
	case "goat.relayer.v1.Votes.epoch":
		return x.Epoch != uint64(0)
	case "goat.relayer.v1.Votes.voters":
		return len(x.Voters) != 0
	case "goat.relayer.v1.Votes.signature":
		return len(x.Signature) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.relayer.v1.Votes"))
		}
		panic(fmt.Errorf("message goat.relayer.v1.Votes does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Votes) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "goat.relayer.v1.Votes.sequence":
		x.Sequence = uint64(0)
	case "goat.relayer.v1.Votes.epoch":
		x.Epoch = uint64(0)
	case "goat.relayer.v1.Votes.voters":
		x.Voters = nil
	case "goat.relayer.v1.Votes.signature":
		x.Signature = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.relayer.v1.Votes"))
		}
		panic(fmt.Errorf("message goat.relayer.v1.Votes does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Votes) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "goat.relayer.v1.Votes.sequence":
		value := x.Sequence
		return protoreflect.ValueOfUint64(value)
	case "goat.relayer.v1.Votes.epoch":
		value := x.Epoch
		return protoreflect.ValueOfUint64(value)
	case "goat.relayer.v1.Votes.voters":
		value := x.Voters
		return protoreflect.ValueOfBytes(value)
	case "goat.relayer.v1.Votes.signature":
		value := x.Signature
		return protoreflect.ValueOfBytes(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.relayer.v1.Votes"))
		}
		panic(fmt.Errorf("message goat.relayer.v1.Votes does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Votes) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "goat.relayer.v1.Votes.sequence":
		x.Sequence = value.Uint()
	case "goat.relayer.v1.Votes.epoch":
		x.Epoch = value.Uint()
	case "goat.relayer.v1.Votes.voters":
		x.Voters = value.Bytes()
	case "goat.relayer.v1.Votes.signature":
		x.Signature = value.Bytes()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.relayer.v1.Votes"))
		}
		panic(fmt.Errorf("message goat.relayer.v1.Votes does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Votes) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goat.relayer.v1.Votes.sequence":
		panic(fmt.Errorf("field sequence of message goat.relayer.v1.Votes is not mutable"))
	case "goat.relayer.v1.Votes.epoch":
		panic(fmt.Errorf("field epoch of message goat.relayer.v1.Votes is not mutable"))
	case "goat.relayer.v1.Votes.voters":
		panic(fmt.Errorf("field voters of message goat.relayer.v1.Votes is not mutable"))
	case "goat.relayer.v1.Votes.signature":
		panic(fmt.Errorf("field signature of message goat.relayer.v1.Votes is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.relayer.v1.Votes"))
		}
		panic(fmt.Errorf("message goat.relayer.v1.Votes does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Votes) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goat.relayer.v1.Votes.sequence":
		return protoreflect.ValueOfUint64(uint64(0))
	case "goat.relayer.v1.Votes.epoch":
		return protoreflect.ValueOfUint64(uint64(0))
	case "goat.relayer.v1.Votes.voters":
		return protoreflect.ValueOfBytes(nil)
	case "goat.relayer.v1.Votes.signature":
		return protoreflect.ValueOfBytes(nil)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.relayer.v1.Votes"))
		}
		panic(fmt.Errorf("message goat.relayer.v1.Votes does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Votes) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in goat.relayer.v1.Votes", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Votes) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Votes) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Votes) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Votes) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Votes)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Sequence != 0 {
			n += 1 + runtime.Sov(uint64(x.Sequence))
		}
		if x.Epoch != 0 {
			n += 1 + runtime.Sov(uint64(x.Epoch))
		}
		l = len(x.Voters)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Signature)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Votes)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Signature) > 0 {
			i -= len(x.Signature)
			copy(dAtA[i:], x.Signature)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Signature)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Voters) > 0 {
			i -= len(x.Voters)
			copy(dAtA[i:], x.Voters)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Voters)))
			i--
			dAtA[i] = 0x1a
		}
		if x.Epoch != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Epoch))
			i--
			dAtA[i] = 0x10
		}
		if x.Sequence != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Sequence))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Votes)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Votes: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Votes: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Sequence", wireType)
				}
				x.Sequence = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Sequence |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Epoch", wireType)
				}
				x.Epoch = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Epoch |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Voters", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Voters = append(x.Voters[:0], dAtA[iNdEx:postIndex]...)
				if x.Voters == nil {
					x.Voters = []byte{}
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Signature", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Signature = append(x.Signature[:0], dAtA[iNdEx:postIndex]...)
				if x.Signature == nil {
					x.Signature = []byte{}
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_OnBoardingVoterRequest               protoreflect.MessageDescriptor
	fd_OnBoardingVoterRequest_height        protoreflect.FieldDescriptor
	fd_OnBoardingVoterRequest_tx_key_hash   protoreflect.FieldDescriptor
	fd_OnBoardingVoterRequest_vote_key_hash protoreflect.FieldDescriptor
)

func init() {
	file_goat_relayer_v1_relayer_proto_init()
	md_OnBoardingVoterRequest = File_goat_relayer_v1_relayer_proto.Messages().ByName("OnBoardingVoterRequest")
	fd_OnBoardingVoterRequest_height = md_OnBoardingVoterRequest.Fields().ByName("height")
	fd_OnBoardingVoterRequest_tx_key_hash = md_OnBoardingVoterRequest.Fields().ByName("tx_key_hash")
	fd_OnBoardingVoterRequest_vote_key_hash = md_OnBoardingVoterRequest.Fields().ByName("vote_key_hash")
}

var _ protoreflect.Message = (*fastReflection_OnBoardingVoterRequest)(nil)

type fastReflection_OnBoardingVoterRequest OnBoardingVoterRequest

func (x *OnBoardingVoterRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_OnBoardingVoterRequest)(x)
}

func (x *OnBoardingVoterRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_goat_relayer_v1_relayer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_OnBoardingVoterRequest_messageType fastReflection_OnBoardingVoterRequest_messageType
var _ protoreflect.MessageType = fastReflection_OnBoardingVoterRequest_messageType{}

type fastReflection_OnBoardingVoterRequest_messageType struct{}

func (x fastReflection_OnBoardingVoterRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_OnBoardingVoterRequest)(nil)
}
func (x fastReflection_OnBoardingVoterRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_OnBoardingVoterRequest)
}
func (x fastReflection_OnBoardingVoterRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_OnBoardingVoterRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_OnBoardingVoterRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_OnBoardingVoterRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_OnBoardingVoterRequest) Type() protoreflect.MessageType {
	return _fastReflection_OnBoardingVoterRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_OnBoardingVoterRequest) New() protoreflect.Message {
	return new(fastReflection_OnBoardingVoterRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_OnBoardingVoterRequest) Interface() protoreflect.ProtoMessage {
	return (*OnBoardingVoterRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_OnBoardingVoterRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Height != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Height)
		if !f(fd_OnBoardingVoterRequest_height, value) {
			return
		}
	}
	if len(x.TxKeyHash) != 0 {
		value := protoreflect.ValueOfBytes(x.TxKeyHash)
		if !f(fd_OnBoardingVoterRequest_tx_key_hash, value) {
			return
		}
	}
	if len(x.VoteKeyHash) != 0 {
		value := protoreflect.ValueOfBytes(x.VoteKeyHash)
		if !f(fd_OnBoardingVoterRequest_vote_key_hash, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_OnBoardingVoterRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "goat.relayer.v1.OnBoardingVoterRequest.height":
		return x.Height != uint64(0)
	case "goat.relayer.v1.OnBoardingVoterRequest.tx_key_hash":
		return len(x.TxKeyHash) != 0
	case "goat.relayer.v1.OnBoardingVoterRequest.vote_key_hash":
		return len(x.VoteKeyHash) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.relayer.v1.OnBoardingVoterRequest"))
		}
		panic(fmt.Errorf("message goat.relayer.v1.OnBoardingVoterRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OnBoardingVoterRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "goat.relayer.v1.OnBoardingVoterRequest.height":
		x.Height = uint64(0)
	case "goat.relayer.v1.OnBoardingVoterRequest.tx_key_hash":
		x.TxKeyHash = nil
	case "goat.relayer.v1.OnBoardingVoterRequest.vote_key_hash":
		x.VoteKeyHash = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.relayer.v1.OnBoardingVoterRequest"))
		}
		panic(fmt.Errorf("message goat.relayer.v1.OnBoardingVoterRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_OnBoardingVoterRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "goat.relayer.v1.OnBoardingVoterRequest.height":
		value := x.Height
		return protoreflect.ValueOfUint64(value)
	case "goat.relayer.v1.OnBoardingVoterRequest.tx_key_hash":
		value := x.TxKeyHash
		return protoreflect.ValueOfBytes(value)
	case "goat.relayer.v1.OnBoardingVoterRequest.vote_key_hash":
		value := x.VoteKeyHash
		return protoreflect.ValueOfBytes(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.relayer.v1.OnBoardingVoterRequest"))
		}
		panic(fmt.Errorf("message goat.relayer.v1.OnBoardingVoterRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OnBoardingVoterRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "goat.relayer.v1.OnBoardingVoterRequest.height":
		x.Height = value.Uint()
	case "goat.relayer.v1.OnBoardingVoterRequest.tx_key_hash":
		x.TxKeyHash = value.Bytes()
	case "goat.relayer.v1.OnBoardingVoterRequest.vote_key_hash":
		x.VoteKeyHash = value.Bytes()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.relayer.v1.OnBoardingVoterRequest"))
		}
		panic(fmt.Errorf("message goat.relayer.v1.OnBoardingVoterRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OnBoardingVoterRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goat.relayer.v1.OnBoardingVoterRequest.height":
		panic(fmt.Errorf("field height of message goat.relayer.v1.OnBoardingVoterRequest is not mutable"))
	case "goat.relayer.v1.OnBoardingVoterRequest.tx_key_hash":
		panic(fmt.Errorf("field tx_key_hash of message goat.relayer.v1.OnBoardingVoterRequest is not mutable"))
	case "goat.relayer.v1.OnBoardingVoterRequest.vote_key_hash":
		panic(fmt.Errorf("field vote_key_hash of message goat.relayer.v1.OnBoardingVoterRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.relayer.v1.OnBoardingVoterRequest"))
		}
		panic(fmt.Errorf("message goat.relayer.v1.OnBoardingVoterRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_OnBoardingVoterRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goat.relayer.v1.OnBoardingVoterRequest.height":
		return protoreflect.ValueOfUint64(uint64(0))
	case "goat.relayer.v1.OnBoardingVoterRequest.tx_key_hash":
		return protoreflect.ValueOfBytes(nil)
	case "goat.relayer.v1.OnBoardingVoterRequest.vote_key_hash":
		return protoreflect.ValueOfBytes(nil)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.relayer.v1.OnBoardingVoterRequest"))
		}
		panic(fmt.Errorf("message goat.relayer.v1.OnBoardingVoterRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_OnBoardingVoterRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in goat.relayer.v1.OnBoardingVoterRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_OnBoardingVoterRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OnBoardingVoterRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_OnBoardingVoterRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_OnBoardingVoterRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*OnBoardingVoterRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Height != 0 {
			n += 1 + runtime.Sov(uint64(x.Height))
		}
		l = len(x.TxKeyHash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.VoteKeyHash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*OnBoardingVoterRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.VoteKeyHash) > 0 {
			i -= len(x.VoteKeyHash)
			copy(dAtA[i:], x.VoteKeyHash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.VoteKeyHash)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.TxKeyHash) > 0 {
			i -= len(x.TxKeyHash)
			copy(dAtA[i:], x.TxKeyHash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TxKeyHash)))
			i--
			dAtA[i] = 0x12
		}
		if x.Height != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Height))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*OnBoardingVoterRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: OnBoardingVoterRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: OnBoardingVoterRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
				}
				x.Height = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Height |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TxKeyHash", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TxKeyHash = append(x.TxKeyHash[:0], dAtA[iNdEx:postIndex]...)
				if x.TxKeyHash == nil {
					x.TxKeyHash = []byte{}
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VoteKeyHash", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.VoteKeyHash = append(x.VoteKeyHash[:0], dAtA[iNdEx:postIndex]...)
				if x.VoteKeyHash == nil {
					x.VoteKeyHash = []byte{}
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_VoterQueue_1_list)(nil)

type _VoterQueue_1_list struct {
	list *[]string
}

func (x *_VoterQueue_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_VoterQueue_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_VoterQueue_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_VoterQueue_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_VoterQueue_1_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message VoterQueue at list field OnBoarding as it is not of Message kind"))
}

func (x *_VoterQueue_1_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_VoterQueue_1_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_VoterQueue_1_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_VoterQueue_2_list)(nil)

type _VoterQueue_2_list struct {
	list *[]string
}

func (x *_VoterQueue_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_VoterQueue_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_VoterQueue_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_VoterQueue_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_VoterQueue_2_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message VoterQueue at list field OffBoarding as it is not of Message kind"))
}

func (x *_VoterQueue_2_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_VoterQueue_2_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_VoterQueue_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_VoterQueue              protoreflect.MessageDescriptor
	fd_VoterQueue_on_boarding  protoreflect.FieldDescriptor
	fd_VoterQueue_off_boarding protoreflect.FieldDescriptor
)

func init() {
	file_goat_relayer_v1_relayer_proto_init()
	md_VoterQueue = File_goat_relayer_v1_relayer_proto.Messages().ByName("VoterQueue")
	fd_VoterQueue_on_boarding = md_VoterQueue.Fields().ByName("on_boarding")
	fd_VoterQueue_off_boarding = md_VoterQueue.Fields().ByName("off_boarding")
}

var _ protoreflect.Message = (*fastReflection_VoterQueue)(nil)

type fastReflection_VoterQueue VoterQueue

func (x *VoterQueue) ProtoReflect() protoreflect.Message {
	return (*fastReflection_VoterQueue)(x)
}

func (x *VoterQueue) slowProtoReflect() protoreflect.Message {
	mi := &file_goat_relayer_v1_relayer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_VoterQueue_messageType fastReflection_VoterQueue_messageType
var _ protoreflect.MessageType = fastReflection_VoterQueue_messageType{}

type fastReflection_VoterQueue_messageType struct{}

func (x fastReflection_VoterQueue_messageType) Zero() protoreflect.Message {
	return (*fastReflection_VoterQueue)(nil)
}
func (x fastReflection_VoterQueue_messageType) New() protoreflect.Message {
	return new(fastReflection_VoterQueue)
}
func (x fastReflection_VoterQueue_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_VoterQueue
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_VoterQueue) Descriptor() protoreflect.MessageDescriptor {
	return md_VoterQueue
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_VoterQueue) Type() protoreflect.MessageType {
	return _fastReflection_VoterQueue_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_VoterQueue) New() protoreflect.Message {
	return new(fastReflection_VoterQueue)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_VoterQueue) Interface() protoreflect.ProtoMessage {
	return (*VoterQueue)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_VoterQueue) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.OnBoarding) != 0 {
		value := protoreflect.ValueOfList(&_VoterQueue_1_list{list: &x.OnBoarding})
		if !f(fd_VoterQueue_on_boarding, value) {
			return
		}
	}
	if len(x.OffBoarding) != 0 {
		value := protoreflect.ValueOfList(&_VoterQueue_2_list{list: &x.OffBoarding})
		if !f(fd_VoterQueue_off_boarding, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_VoterQueue) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "goat.relayer.v1.VoterQueue.on_boarding":
		return len(x.OnBoarding) != 0
	case "goat.relayer.v1.VoterQueue.off_boarding":
		return len(x.OffBoarding) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.relayer.v1.VoterQueue"))
		}
		panic(fmt.Errorf("message goat.relayer.v1.VoterQueue does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VoterQueue) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "goat.relayer.v1.VoterQueue.on_boarding":
		x.OnBoarding = nil
	case "goat.relayer.v1.VoterQueue.off_boarding":
		x.OffBoarding = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.relayer.v1.VoterQueue"))
		}
		panic(fmt.Errorf("message goat.relayer.v1.VoterQueue does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_VoterQueue) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "goat.relayer.v1.VoterQueue.on_boarding":
		if len(x.OnBoarding) == 0 {
			return protoreflect.ValueOfList(&_VoterQueue_1_list{})
		}
		listValue := &_VoterQueue_1_list{list: &x.OnBoarding}
		return protoreflect.ValueOfList(listValue)
	case "goat.relayer.v1.VoterQueue.off_boarding":
		if len(x.OffBoarding) == 0 {
			return protoreflect.ValueOfList(&_VoterQueue_2_list{})
		}
		listValue := &_VoterQueue_2_list{list: &x.OffBoarding}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.relayer.v1.VoterQueue"))
		}
		panic(fmt.Errorf("message goat.relayer.v1.VoterQueue does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VoterQueue) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "goat.relayer.v1.VoterQueue.on_boarding":
		lv := value.List()
		clv := lv.(*_VoterQueue_1_list)
		x.OnBoarding = *clv.list
	case "goat.relayer.v1.VoterQueue.off_boarding":
		lv := value.List()
		clv := lv.(*_VoterQueue_2_list)
		x.OffBoarding = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.relayer.v1.VoterQueue"))
		}
		panic(fmt.Errorf("message goat.relayer.v1.VoterQueue does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VoterQueue) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goat.relayer.v1.VoterQueue.on_boarding":
		if x.OnBoarding == nil {
			x.OnBoarding = []string{}
		}
		value := &_VoterQueue_1_list{list: &x.OnBoarding}
		return protoreflect.ValueOfList(value)
	case "goat.relayer.v1.VoterQueue.off_boarding":
		if x.OffBoarding == nil {
			x.OffBoarding = []string{}
		}
		value := &_VoterQueue_2_list{list: &x.OffBoarding}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.relayer.v1.VoterQueue"))
		}
		panic(fmt.Errorf("message goat.relayer.v1.VoterQueue does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_VoterQueue) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goat.relayer.v1.VoterQueue.on_boarding":
		list := []string{}
		return protoreflect.ValueOfList(&_VoterQueue_1_list{list: &list})
	case "goat.relayer.v1.VoterQueue.off_boarding":
		list := []string{}
		return protoreflect.ValueOfList(&_VoterQueue_2_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.relayer.v1.VoterQueue"))
		}
		panic(fmt.Errorf("message goat.relayer.v1.VoterQueue does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_VoterQueue) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in goat.relayer.v1.VoterQueue", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_VoterQueue) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VoterQueue) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_VoterQueue) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_VoterQueue) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*VoterQueue)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.OnBoarding) > 0 {
			for _, s := range x.OnBoarding {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.OffBoarding) > 0 {
			for _, s := range x.OffBoarding {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*VoterQueue)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.OffBoarding) > 0 {
			for iNdEx := len(x.OffBoarding) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.OffBoarding[iNdEx])
				copy(dAtA[i:], x.OffBoarding[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.OffBoarding[iNdEx])))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.OnBoarding) > 0 {
			for iNdEx := len(x.OnBoarding) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.OnBoarding[iNdEx])
				copy(dAtA[i:], x.OnBoarding[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.OnBoarding[iNdEx])))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*VoterQueue)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: VoterQueue: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: VoterQueue: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OnBoarding", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OnBoarding = append(x.OnBoarding, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OffBoarding", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OffBoarding = append(x.OffBoarding, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: goat/relayer/v1/relayer.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// VoterStatus is the status of a voter.
type VoterStatus int32

const (
	// VOTER_STATUS_UNSPECIFIED defines an invalid status.
	VoterStatus_VOTER_STATUS_UNSPECIFIED VoterStatus = 0
	// VOTER_STATUS_PENDING defines a pending voter which was added on the chain
	// he still needs to send online proof to proposer to prove liveness and
	// ownership of the public key
	VoterStatus_VOTER_STATUS_PENDING VoterStatus = 1
	// VOTER_STATUS_ON_BOARDING defines a voter that is approved from current
	// proposer the voter will be added to voter list in the next election
	VoterStatus_VOTER_STATUS_ON_BOARDING VoterStatus = 2
	// VOTER_STATUS_OFF_BOARDING defines a voter that is removing from relayer
	// group the voter will be removed from **chain state db** in the next
	// election
	VoterStatus_VOTER_STATUS_OFF_BOARDING VoterStatus = 3
	// VOTER_STATUS_ACTIVATED defines a voter that is working.
	VoterStatus_VOTER_STATUS_ACTIVATED VoterStatus = 4
)

// Enum value maps for VoterStatus.
var (
	VoterStatus_name = map[int32]string{
		0: "VOTER_STATUS_UNSPECIFIED",
		1: "VOTER_STATUS_PENDING",
		2: "VOTER_STATUS_ON_BOARDING",
		3: "VOTER_STATUS_OFF_BOARDING",
		4: "VOTER_STATUS_ACTIVATED",
	}
	VoterStatus_value = map[string]int32{
		"VOTER_STATUS_UNSPECIFIED":  0,
		"VOTER_STATUS_PENDING":      1,
		"VOTER_STATUS_ON_BOARDING":  2,
		"VOTER_STATUS_OFF_BOARDING": 3,
		"VOTER_STATUS_ACTIVATED":    4,
	}
)

func (x VoterStatus) Enum() *VoterStatus {
	p := new(VoterStatus)
	*p = x
	return p
}

func (x VoterStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VoterStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_goat_relayer_v1_relayer_proto_enumTypes[0].Descriptor()
}

func (VoterStatus) Type() protoreflect.EnumType {
	return &file_goat_relayer_v1_relayer_proto_enumTypes[0]
}

func (x VoterStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VoterStatus.Descriptor instead.
func (VoterStatus) EnumDescriptor() ([]byte, []int) {
	return file_goat_relayer_v1_relayer_proto_rawDescGZIP(), []int{0}
}

// Relayer represents the current relayer group state
type Relayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the epoch number, increasing every election
	Epoch       uint64                 `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Proposer    string                 `protobuf:"bytes,2,opt,name=proposer,proto3" json:"proposer,omitempty"`
	Voters      []string               `protobuf:"bytes,3,rep,name=voters,proto3" json:"voters,omitempty"`
	LastElected *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_elected,json=lastElected,proto3" json:"last_elected,omitempty"`
	// proposer_accepted defined proposer has accepted the election result
	ProposerAccepted bool `protobuf:"varint,5,opt,name=proposer_accepted,json=proposerAccepted,proto3" json:"proposer_accepted,omitempty"`
}

func (x *Relayer) Reset() {
	*x = Relayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goat_relayer_v1_relayer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Relayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Relayer) ProtoMessage() {}

// Deprecated: Use Relayer.ProtoReflect.Descriptor instead.
func (*Relayer) Descriptor() ([]byte, []int) {
	return file_goat_relayer_v1_relayer_proto_rawDescGZIP(), []int{0}
}

func (x *Relayer) GetEpoch() uint64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *Relayer) GetProposer() string {
	if x != nil {
		return x.Proposer
	}
	return ""
}

func (x *Relayer) GetVoters() []string {
	if x != nil {
		return x.Voters
	}
	return nil
}

func (x *Relayer) GetLastElected() *timestamppb.Timestamp {
	if x != nil {
		return x.LastElected
	}
	return nil
}

func (x *Relayer) GetProposerAccepted() bool {
	if x != nil {
		return x.ProposerAccepted
	}
	return false
}

// Voter the relayer voter
type Voter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the address bytes
	Address []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// vote key is the bls12-381 G2 compressed pubkey(96 bytes)
	// the key is a sha256 hash if the voter is pending to join the relayer
	// network
	VoteKey []byte `protobuf:"bytes,2,opt,name=vote_key,json=voteKey,proto3" json:"vote_key,omitempty"`
	// status represents the current voter status
	Status VoterStatus `protobuf:"varint,3,opt,name=status,proto3,enum=goat.relayer.v1.VoterStatus" json:"status,omitempty"`
	// height represents the block number of consensus layer when voter is
	// approved to join on execution layer
	Height uint64 `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *Voter) Reset() {
	*x = Voter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goat_relayer_v1_relayer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Voter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Voter) ProtoMessage() {}

// Deprecated: Use Voter.ProtoReflect.Descriptor instead.
func (*Voter) Descriptor() ([]byte, []int) {
	return file_goat_relayer_v1_relayer_proto_rawDescGZIP(), []int{1}
}

func (x *Voter) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Voter) GetVoteKey() []byte {
	if x != nil {
		return x.VoteKey
	}
	return nil
}

func (x *Voter) GetStatus() VoterStatus {
	if x != nil {
		return x.Status
	}
	return VoterStatus_VOTER_STATUS_UNSPECIFIED
}

func (x *Voter) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

// PublicKey defines the keys available for use with relayer
type PublicKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the key
	//
	// Types that are assignable to Key:
	//
	//	*PublicKey_Secp256K1
	//	*PublicKey_Schnorr
	Key isPublicKey_Key `protobuf_oneof:"key"`
}

func (x *PublicKey) Reset() {
	*x = PublicKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goat_relayer_v1_relayer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicKey) ProtoMessage() {}

// Deprecated: Use PublicKey.ProtoReflect.Descriptor instead.
func (*PublicKey) Descriptor() ([]byte, []int) {
	return file_goat_relayer_v1_relayer_proto_rawDescGZIP(), []int{2}
}

func (x *PublicKey) GetKey() isPublicKey_Key {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *PublicKey) GetSecp256K1() []byte {
	if x, ok := x.GetKey().(*PublicKey_Secp256K1); ok {
		return x.Secp256K1
	}
	return nil
}

func (x *PublicKey) GetSchnorr() []byte {
	if x, ok := x.GetKey().(*PublicKey_Schnorr); ok {
		return x.Schnorr
	}
	return nil
}

type isPublicKey_Key interface {
	isPublicKey_Key()
}

type PublicKey_Secp256K1 struct {
	Secp256K1 []byte `protobuf:"bytes,1,opt,name=secp256k1,proto3,oneof"`
}

type PublicKey_Schnorr struct {
	Schnorr []byte `protobuf:"bytes,2,opt,name=schnorr,proto3,oneof"`
}

func (*PublicKey_Secp256K1) isPublicKey_Key() {}

func (*PublicKey_Schnorr) isPublicKey_Key() {}

// message Votes the proposal vote result
type Votes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the current proposal sequence
	Sequence uint64 `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	// the current relayer epoch number
	Epoch uint64 `protobuf:"varint,2,opt,name=epoch,proto3" json:"epoch,omitempty"`
	// voters represents the voter bitmap
	Voters []byte `protobuf:"bytes,3,opt,name=voters,proto3" json:"voters,omitempty"`
	// signature is the aggregate signature by voters
	Signature []byte `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *Votes) Reset() {
	*x = Votes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goat_relayer_v1_relayer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Votes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Votes) ProtoMessage() {}

// Deprecated: Use Votes.ProtoReflect.Descriptor instead.
func (*Votes) Descriptor() ([]byte, []int) {
	return file_goat_relayer_v1_relayer_proto_rawDescGZIP(), []int{3}
}

func (x *Votes) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *Votes) GetEpoch() uint64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *Votes) GetVoters() []byte {
	if x != nil {
		return x.Voters
	}
	return nil
}

func (x *Votes) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

// OnBoardingVoterRequest
type OnBoardingVoterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height      uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	TxKeyHash   []byte `protobuf:"bytes,2,opt,name=tx_key_hash,json=txKeyHash,proto3" json:"tx_key_hash,omitempty"` // aka. voter address
	VoteKeyHash []byte `protobuf:"bytes,3,opt,name=vote_key_hash,json=voteKeyHash,proto3" json:"vote_key_hash,omitempty"`
}

func (x *OnBoardingVoterRequest) Reset() {
	*x = OnBoardingVoterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goat_relayer_v1_relayer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnBoardingVoterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnBoardingVoterRequest) ProtoMessage() {}

// Deprecated: Use OnBoardingVoterRequest.ProtoReflect.Descriptor instead.
func (*OnBoardingVoterRequest) Descriptor() ([]byte, []int) {
	return file_goat_relayer_v1_relayer_proto_rawDescGZIP(), []int{4}
}

func (x *OnBoardingVoterRequest) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *OnBoardingVoterRequest) GetTxKeyHash() []byte {
	if x != nil {
		return x.TxKeyHash
	}
	return nil
}

func (x *OnBoardingVoterRequest) GetVoteKeyHash() []byte {
	if x != nil {
		return x.VoteKeyHash
	}
	return nil
}

// VoterQueue
type VoterQueue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnBoarding  []string `protobuf:"bytes,1,rep,name=on_boarding,json=onBoarding,proto3" json:"on_boarding,omitempty"`
	OffBoarding []string `protobuf:"bytes,2,rep,name=off_boarding,json=offBoarding,proto3" json:"off_boarding,omitempty"`
}

func (x *VoterQueue) Reset() {
	*x = VoterQueue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goat_relayer_v1_relayer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoterQueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoterQueue) ProtoMessage() {}

// Deprecated: Use VoterQueue.ProtoReflect.Descriptor instead.
func (*VoterQueue) Descriptor() ([]byte, []int) {
	return file_goat_relayer_v1_relayer_proto_rawDescGZIP(), []int{5}
}

func (x *VoterQueue) GetOnBoarding() []string {
	if x != nil {
		return x.OnBoarding
	}
	return nil
}

func (x *VoterQueue) GetOffBoarding() []string {
	if x != nil {
		return x.OffBoarding
	}
	return nil
}

var File_goat_relayer_v1_relayer_proto protoreflect.FileDescriptor

var file_goat_relayer_v1_relayer_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x67, 0x6f, 0x61, 0x74, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x76,
	0x31, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0f, 0x67, 0x6f, 0x61, 0x74, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x1a, 0x11, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2f, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14,
	0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfd, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x34, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x12, 0x30, 0x0a,
	0x06, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x42, 0x18, 0xd2,
	0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x47, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x42, 0x08, 0xc8, 0xde, 0x1f, 0x00, 0x90, 0xdf, 0x1f, 0x01, 0x52, 0x0b, 0x6c, 0x61, 0x73,
	0x74, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x65, 0x64, 0x22, 0x8a, 0x01, 0x0a, 0x05, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x6f, 0x74,
	0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x76, 0x6f, 0x74,
	0x65, 0x4b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x61, 0x74, 0x2e, 0x72, 0x65, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x22, 0xa4, 0x01, 0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x12, 0x45, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x70, 0x32, 0x35, 0x36, 0x6b, 0x31, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x42, 0x25, 0xb2, 0xe7, 0xb0, 0x2a, 0x20, 0x67, 0x6f, 0x61, 0x74, 0x2f, 0x52,
	0x65, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x2f, 0x53, 0x65, 0x63, 0x70, 0x32, 0x35, 0x36, 0x6b, 0x31, 0x48, 0x00, 0x52, 0x09, 0x73, 0x65,
	0x63, 0x70, 0x32, 0x35, 0x36, 0x6b, 0x31, 0x12, 0x3f, 0x0a, 0x07, 0x73, 0x63, 0x68, 0x6e, 0x6f,
	0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x23, 0xb2, 0xe7, 0xb0, 0x2a, 0x1e, 0x67,
	0x6f, 0x61, 0x74, 0x2f, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x2f, 0x53, 0x63, 0x68, 0x6e, 0x6f, 0x72, 0x72, 0x48, 0x00, 0x52,
	0x07, 0x73, 0x63, 0x68, 0x6e, 0x6f, 0x72, 0x72, 0x3a, 0x08, 0xe8, 0xa0, 0x1f, 0x01, 0xe8, 0xa1,
	0x1f, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x6f, 0x0a, 0x05, 0x56, 0x6f, 0x74,
	0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x74, 0x0a, 0x16, 0x4f, 0x6e,
	0x42, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1e, 0x0a, 0x0b,
	0x74, 0x78, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x74, 0x78, 0x4b, 0x65, 0x79, 0x48, 0x61, 0x73, 0x68, 0x12, 0x22, 0x0a, 0x0d,
	0x76, 0x6f, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0b, 0x76, 0x6f, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x48, 0x61, 0x73, 0x68,
	0x22, 0x50, 0x0a, 0x0a, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x6f, 0x6e, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12,
	0x21, 0x0a, 0x0c, 0x6f, 0x66, 0x66, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x66, 0x66, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x2a, 0xa4, 0x01, 0x0a, 0x0b, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1c, 0x0a, 0x18, 0x56, 0x4f, 0x54, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x18, 0x0a, 0x14, 0x56, 0x4f, 0x54, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x56, 0x4f,
	0x54, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f, 0x4e, 0x5f, 0x42, 0x4f,
	0x41, 0x52, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x56, 0x4f, 0x54, 0x45,
	0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f, 0x46, 0x46, 0x5f, 0x42, 0x4f, 0x41,
	0x52, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x56, 0x4f, 0x54, 0x45, 0x52,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x41, 0x54, 0x45,
	0x44, 0x10, 0x04, 0x1a, 0x04, 0x88, 0xa3, 0x1e, 0x00, 0x42, 0xbc, 0x01, 0x0a, 0x13, 0x63, 0x6f,
	0x6d, 0x2e, 0x67, 0x6f, 0x61, 0x74, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x42, 0x0c, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f,
	0x61, 0x74, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x67, 0x6f, 0x61, 0x74, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x67, 0x6f, 0x61, 0x74, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f,
	0x76, 0x31, 0x3b, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x47,
	0x52, 0x58, 0xaa, 0x02, 0x0f, 0x47, 0x6f, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0f, 0x47, 0x6f, 0x61, 0x74, 0x5c, 0x52, 0x65, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1b, 0x47, 0x6f, 0x61, 0x74, 0x5c, 0x52, 0x65,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x11, 0x47, 0x6f, 0x61, 0x74, 0x3a, 0x3a, 0x52, 0x65, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_goat_relayer_v1_relayer_proto_rawDescOnce sync.Once
	file_goat_relayer_v1_relayer_proto_rawDescData = file_goat_relayer_v1_relayer_proto_rawDesc
)

func file_goat_relayer_v1_relayer_proto_rawDescGZIP() []byte {
	file_goat_relayer_v1_relayer_proto_rawDescOnce.Do(func() {
		file_goat_relayer_v1_relayer_proto_rawDescData = protoimpl.X.CompressGZIP(file_goat_relayer_v1_relayer_proto_rawDescData)
	})
	return file_goat_relayer_v1_relayer_proto_rawDescData
}

var file_goat_relayer_v1_relayer_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_goat_relayer_v1_relayer_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_goat_relayer_v1_relayer_proto_goTypes = []interface{}{
	(VoterStatus)(0),               // 0: goat.relayer.v1.VoterStatus
	(*Relayer)(nil),                // 1: goat.relayer.v1.Relayer
	(*Voter)(nil),                  // 2: goat.relayer.v1.Voter
	(*PublicKey)(nil),              // 3: goat.relayer.v1.PublicKey
	(*Votes)(nil),                  // 4: goat.relayer.v1.Votes
	(*OnBoardingVoterRequest)(nil), // 5: goat.relayer.v1.OnBoardingVoterRequest
	(*VoterQueue)(nil),             // 6: goat.relayer.v1.VoterQueue
	(*timestamppb.Timestamp)(nil),  // 7: google.protobuf.Timestamp
}
var file_goat_relayer_v1_relayer_proto_depIdxs = []int32{
	7, // 0: goat.relayer.v1.Relayer.last_elected:type_name -> google.protobuf.Timestamp
	0, // 1: goat.relayer.v1.Voter.status:type_name -> goat.relayer.v1.VoterStatus
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_goat_relayer_v1_relayer_proto_init() }
func file_goat_relayer_v1_relayer_proto_init() {
	if File_goat_relayer_v1_relayer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_goat_relayer_v1_relayer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Relayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goat_relayer_v1_relayer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Voter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goat_relayer_v1_relayer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goat_relayer_v1_relayer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Votes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goat_relayer_v1_relayer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnBoardingVoterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goat_relayer_v1_relayer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoterQueue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_goat_relayer_v1_relayer_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*PublicKey_Secp256K1)(nil),
		(*PublicKey_Schnorr)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_goat_relayer_v1_relayer_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_goat_relayer_v1_relayer_proto_goTypes,
		DependencyIndexes: file_goat_relayer_v1_relayer_proto_depIdxs,
		EnumInfos:         file_goat_relayer_v1_relayer_proto_enumTypes,
		MessageInfos:      file_goat_relayer_v1_relayer_proto_msgTypes,
	}.Build()
	File_goat_relayer_v1_relayer_proto = out.File
	file_goat_relayer_v1_relayer_proto_rawDesc = nil
	file_goat_relayer_v1_relayer_proto_goTypes = nil
	file_goat_relayer_v1_relayer_proto_depIdxs = nil
}
