syntax = "proto3";
package goat.locking.v1;

import "amino/amino.proto";
import "goat/locking/v1/locking.proto";
import "goat/locking/v1/params.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";

option go_package = "github.com/goatnetwork/goat/x/locking/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/goatnetwork/goat/locking/v1/params";
  }

  // Validator queries validator state by address.
  rpc Validator(QueryValidatorRequest) returns (QueryValidatorResponse) {
    option (google.api.http).get = "/goatnetwork/goat/locking/v1/validator";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// QueryValidatorRequest
message QueryValidatorRequest {
  string address = 1;
}

// QueryValidatorResponse
message QueryValidatorResponse {
  Validator validator = 1 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
  int64 height = 2 [(amino.dont_omitempty) = true];
}
